1.梯子安装:
1.1 x-ui: 
bash <(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)
1.2 vasma:
wget -P /root -N --no-check-certificate "https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh" && chmod 700 /root/install.sh && /root/install.sh
1.3 singbox
bash <(wget -qO- https://raw.githubusercontent.com/fscarmen/sing-box/main/sing-box.sh)

2.alist安装: 
curl -fsSL "https://alist.nn.ci/v3.sh" | bash -s install
cd /opt/alist
./alist admin set NEW_PASSWORD

3.vps测试
3.1 融合怪
bash <(wget -qO- bash.spiritlhl.net/ecs)
3.2 性能
wget -qO- yabs.sh | bash
3.3 网络
bash <(curl -Lso- https://bench.im/hyperspeed)
wget -N --no-check-certificate https://raw.githubusercontent.com/Chennhaoo/Shell_Bash/master/AutoTrace.sh && chmod +x AutoTrace.sh && bash AutoTrace.sh
3.4 是否超售
wget --no-check-certificate -O memoryCheck.sh https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh && chmod +x memoryCheck.sh && bash memoryCheck.sh

4.rclone
4.1 rclone 安装
curl https://rclone.org/install.sh | sudo bash
4.2 rclone移动文件
nohup rclone copy DRIVE_1:/FILENAME DRIVE_2:/FILENAME --ignore-existing &
4.3 rclone挂载目录
apt install fuse
apt install fuse3
mkdir /FILE
nohup rclone mount FILE:/ /FILE --cache-dir /tmp --allow-other --vfs-cache-mode writes --allow-non-empty &


5.aria2安装
wget -N git.io/aria2.sh && chmod +x aria2.sh && ./aria2.sh

6.jupyter 安装
apt install python3 python3-pip python3-venv
mkdir code
python3 -m venv env
source env/bin/activate
pip3 install jupyter
如果服务器有ipv4地址则执行：
jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root
如果没有ipv6地址则执行：
jupyter notebook --ip=:: --port=8888 --no-browser --allow-root

    location / {
        proxy_pass http://localhost:8888;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Scheme $scheme;

        proxy_buffering off;
    }

7.设置nginx反代
apt install nginx
cat cat <<EOF > /etc/nginx/sites-available/NAME.conf
your_content
server {
    listen 80;
    server_name DOMAIN_NAME;
    
    location / {
        proxy_pass http://localhost:PORT;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
EOF 
ln -s /etc/nginx/sites-available/NAME.conf /etc/nginx/sites-enabled/
apt install certbot python3-certbot-nginx
certbot --nginx


8. 为ipv6服务器添加ipv4出口
首先执行：
mv /etc/resolv.conf /etc/resolv.conf.bak && echo -e "nameserver 2001:67c:2b0::4\nnameserver 2001:67c:2b0::6" > /etc/resolv.conf
然后再选择
8.1 FSCARMEN
wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh && bash menu.sh
8.2 P3TERX 
bash <(curl -fsSL git.io/warp.sh) menu
8.3 WARP-GO 
wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh && bash warp-go.sh
8.4 MISAKA wget -N https://gitlab.com/Misaka-blog/warp-script/-/raw/main/warp.sh && bash warp.sh

FSCARMEN (https://github.com/fscarmen/warp) :
 - 首次运行 wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh && bash menu.sh
 - 日常维护 warp

P3TERX (https://github.com/P3TERX/warp.sh) :
 - 首次运行 bash <(curl -fsSL git.io/warp.sh) menu
 - 日常维护 bash warp.sh

WARP-GO (https://gitlab.com/ProjectWARP/warp-go/-/tree/master/) :
 - 首次运行 wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh && bash warp-go.sh
 - 日常维护 warp-go

MISAKA (https://gitlab.com/Misaka-blog/warp-script) :
 - 首次运行 wget -N https://gitlab.com/Misaka-blog/warp-script/-/raw/main/warp.sh && bash warp.sh
 - 日常维护 bash warp.sh

9.docker和docker-compose安装
curl -sSL https://get.docker.com/ | sh
curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

10. 直播推流
curl -fsSL get.kplayer.net | bash
cd kplayer
vim config.js
{
"version": "2.0.0",
"resource": {
"lists": [
"/root/mp4/视频文件名.mp4"
]
},
"play": {
"play_model": "loop"
},
"output": {
"lists": [
{
"path": "B站服务器地址和串流密钥"
}
]
}
}
./kplayer play start --daemon

11.
fallocate -l 1G /swapfile
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
swapon --show

12.
rclone mount alist:/ /alist --cache-dir /tmp --allow-other --vfs-cache-mode writes --allow-non-empty

13.
curl -sSL https://get.docker.com/ | sh
